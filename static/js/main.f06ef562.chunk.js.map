{"version":3,"sources":["store/actions/updateList.js","App.js","store/reducers/todoListReducer.js","store/index.js","index.js"],"names":["ADD","EDIT","DELETE","App","props","state","input","handleChange","bind","handleKeyPress","submitMessage","event","this","setState","target","value","key","addMessage","id","htmlFor","className","type","placeholder","onChange","onKeyPress","onClick","messages","length","editMessage","deleteMessage","React","Component","List","map","x","i","Math","floor","random","text","index","edit","delete","NoList","ListItem","itemInput","itemInputChange","editItem","deleteItem","textContent","href","draggable","contentEditable","onInput","role","connect","localStorage","dispatch","message","messageReducer","action","copyState","splice","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f06ef562.chunk.js","sourcesContent":["\r\nexport const ADD = 'ADD';\r\nexport const EDIT = 'EDIT';\r\nexport const DELETE = 'DELETE';\r\n\r\nconst addMessage = (message) => {\r\n  return {\r\n    type: ADD,\r\n    message: message\r\n  }\r\n};\r\nconst editMessage = (index, message) => {\r\n  return {\r\n    type: EDIT,\r\n    index: index,\r\n    message: message\r\n  }\r\n};\r\nconst deleteMessage = (index) => {\r\n  return {\r\n    type: DELETE,\r\n    index: index\r\n  }\r\n};\r\n\r\nexport {addMessage, editMessage, deleteMessage};\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  addMessage,\n  editMessage,\n  deleteMessage,\n} from \"./store/actions/updateList\";\n\n// React:\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      input: event.target.value,\n    });\n  }\n  handleKeyPress(event) {\n    if (event.key === \"Enter\") {\n      this.submitMessage();\n    }\n  }\n  submitMessage() {\n    if (this.state.input === \"\") {\n      return;\n    }\n    this.props.addMessage(this.state.input);\n    this.setState({\n      input: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"toDoApp\">\n        <label id=\"toDoTitle\" htmlFor=\"basic-input\">\n          <h2 className=\"text-monospace\">Add new things To Do:</h2>\n        </label>\n        <div id=\"toDoAdd\" className=\"input-group\">\n          <input\n            id=\"basic-input\"\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Thing to do\"\n            value={this.state.input}\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-primary\"\n              onClick={this.submitMessage}\n            >\n              Add\n            </button>\n          </div>\n        </div>\n        {this.props.messages.length > 0 ? (\n          <List\n            messages={this.props.messages}\n            editMessage={this.props.editMessage}\n            deleteMessage={this.props.deleteMessage}\n          />\n        ) : (\n          <NoList />\n        )}\n      </div>\n    );\n  }\n}\n\nconst List = (props) => {\n  return (\n    <div id=\"toDoList\">\n      <label htmlFor=\"basic-input\">\n        <span className=\"text-monospace\">Things to do:</span>\n      </label>\n      <div className=\"list-group\">\n        {props.messages.map((x, i) => {\n          let rand = Math.floor(Math.random() * 10000 + 1);\n          let key = \"id\" + i + \"\" + rand;\n          return (\n            <ListItem\n              key={key}\n              text={x}\n              index={i}\n              edit={props.editMessage}\n              delete={props.deleteMessage}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst NoList = () => {\n  return (\n    <div\n      id=\"toDoList\"\n      className=\"d-flex align-items-center justify-content-center\"\n    >\n      <p className=\"text-muted text-monospace mt-5\">Your list is empty</p>\n    </div>\n  );\n};\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemInput: this.props.text,\n    };\n    this.itemInputChange = this.itemInputChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.editItem = this.editItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  handleKeyPress(event) {\n    if (event.key === \"Enter\") {\n      this.editItem();\n    }\n  }\n\n  itemInputChange(event) {\n    this.setState({\n      itemInput: event.target.textContent,\n    });\n  }\n\n  editItem() {\n    if (this.state.itemInput === \"\") {\n      this.setState({\n        itemInput: this.props.text,\n      });\n      return;\n    }\n    this.props.edit(this.props.index, this.state.itemInput);\n  }\n\n  deleteItem() {\n    this.props.delete(this.props.index);\n  }\n\n  render() {\n    return (\n      <div>\n        <a\n          className=\"list-group-item list-group-item-action d-flex justify-content-between\"\n          href=\"www.#.com\"\n          draggable=\"false\"\n        >\n          <span\n            contentEditable={true}\n            value={this.state.itemInput}\n            onInput={this.itemInputChange}\n            onKeyPress={this.handleKeyPress}\n          >\n            {this.props.text}\n          </span>\n        </a>\n        <div className=\"btn-group btn-group-sm\" role=\"group\">\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={this.editItem}\n          >\n            Rename\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={this.deleteItem}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// React-Redux\nconst MapStateToProps = (state) => {\n  let _state = localStorage.state ? localStorage.state : state;\n  return { messages: _state };\n};\n\nconst MapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (message) => {\n      dispatch(addMessage(message));\n    },\n    editMessage: (index, message) => {\n      dispatch(editMessage(index, message));\n    },\n    deleteMessage: (index) => {\n      dispatch(deleteMessage(index));\n    },\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(App);\n","import { ADD, EDIT, DELETE } from \"../actions/updateList\";\r\n\r\n\r\nconst messageReducer = (state = [], action) => {\r\n  let copyState = [...state];\r\n  switch (action.type) {\r\n    case ADD:\r\n      return [...state, action.message];\r\n    case EDIT:\r\n      copyState[action.index] = action.message;\r\n      return copyState;\r\n    case DELETE:\r\n      copyState.splice(action.index, 1)\r\n      return copyState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default messageReducer;\r\n","import { createStore } from \"redux\";\r\nimport messageReducer from \"./reducers/todoListReducer\"\r\n\r\n\r\n\r\nconst store = createStore(messageReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}